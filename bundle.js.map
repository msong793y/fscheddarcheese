{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/cat.js","webpack:///./src/enemy_object.js","webpack:///./src/game.js","webpack:///./src/game_view.js","webpack:///./src/homing_mouse.js","webpack:///./src/index.js","webpack:///./src/modal.js","webpack:///./src/moving_object.js","webpack:///./src/sloth.js","webpack:///./src/tiny_mouse.js","webpack:///./src/util.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA,aAAa,mBAAO,CAAC,gCAAW;AAChC,qBAAqB,mBAAO,CAAC,kDAAoB;AACjD;;AAEA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;;AAEZ;AACA;AACA;;AAEA,4BAA4B,mBAAmB;AAC/C,+BAA+B,qBAAqB;AACpD,+BAA+B,qBAAqB;AACpD,gCAAgC,qBAAqB;AACrD,gCAAgC,qBAAqB;AACrD,gCAAgC,qBAAqB;AACrD,gCAAgC,qBAAqB;AACrD,iCAAiC,qBAAqB;AACtD;;AAEA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;;AAEA;;AAEA,qB;;;;;;;;;;;AC1FA,aAAa,mBAAO,CAAC,gCAAW;AAChC,qBAAqB,mBAAO,CAAC,kDAAoB;AACjD;;;AAGA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;;AAGA,8B;;;;;;;;;;;AC1BA;AACA,aAAa,mBAAO,CAAC,gCAAW;;AAEhC,aAAa,mBAAO,CAAC,+BAAS;AAC9B,YAAY,mBAAO,CAAC,2BAAO;AAC3B,iBAAiB,mBAAO,CAAC,yCAAc;AACvC,oBAAoB,mBAAO,CAAC,6CAAgB;;AAE5C;AACA,yC;;;AAGA;AACA;AACA;AACA,4BAA4B,yDAAyD;AACrF,wBAAwB,0CAA0C;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;;;;;AAKA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,S;;AAEA,K;AACA;AACA;AACA;;;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA,2CAA2C,+CAA+C;AAC1F;AACA;AACA;AACA;AACA;AACA,+CAA+C,+CAA+C;AAC9F;AACA;;AAEA;AACA;;AAEA;AACA,qCAAqC,iDAAiD;;AAEtF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,kBAAkB,uBAAuB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,mBAAmB,6BAA6B;;AAEhD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kBAAkB;AAC7C,oBAAoB,kBAAkB;;AAEtC;AACA,iBAAiB,wBAAwB;AACzC;AACA;AACA;;AAEA;AACA;;AAEA,mBAAmB,0BAA0B;AAC7C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;;;;;AC/MA,aAAa,mBAAO,CAAC,gCAAW;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;;;AAIA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,4BAA4B,mBAAmB,EAAE;AACjD,KAAK;;;AAGL;;;;;AAKA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;;AAEA,SAAS;AACT;;AAEA;;AAEA,SAAS;AACT;;AAEA;;AAEA,SAAS;AACT;;AAEA;;AAEA,SAAS;;;AAGT;;;AAGA;AACA;;;;AAIA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;AAGA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,0B;;;;;;;;;;;AChJA,aAAa,mBAAO,CAAC,gCAAW;AAChC,qBAAqB,mBAAO,CAAC,6CAAgB;AAC7C;AACA;AACA;;;AAGA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,6B;;;;;;;;;;;AC5CA;;AAEA,aAAa,mBAAO,CAAC,gCAAW;AAChC,iBAAiB,mBAAO,CAAC,0CAAgB;AACzC,cAAc,mBAAO,CAAC,+BAAS;;;AAG/B,qBAAqB,mBAAO,CAAC,kDAAoB;;;AAGjD;AACA;;;AAGA;AACA;AACA;AACA;;;;AAIA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA,KAAK;;AAEL;AACA;;AAEA;;AAEA,KAAK;;AAEL,CAAC;;;;;;;;;;;;;ACxCD;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uB;;;;;;;;;;;ACtBA,aAAa,mBAAO,CAAC,6BAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,YAAY;AACZ;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,KAAK;;AAEL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA,KAAK;AACL;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;;AAEA;;;AAGA;;;;;;;;;;;;ACpOA,aAAa,mBAAO,CAAC,gCAAW;AAChC,qBAAqB,mBAAO,CAAC,kDAAoB;AACjD;;;AAGA;AACA;;;;AAIA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,mCAAmC,mBAAmB;;AAEtD,6BAA6B,cAAc,cAAc;;AAEzD;;AAEA;;;AAGA,uB;;;;;;;;;;;AC1CA,aAAa,mBAAO,CAAC,gCAAW;AAChC,qBAAqB,mBAAO,CAAC,6CAAgB;AAC7C;;AAEA;AACA;;AAEA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;;;;;;;AAOL;;AAEA,2B;;;;;;;;;;;AChCA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;AACL;;;;AAIA,sB","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","const Util = require(\"./util.js\");\nconst MovingObject = require(\"./moving_object.js\");\nUtil.inherits(Cat, MovingObject);\n\n// let timer = 1000;\n\nvar catImage = new Image();\ncatImage.src = './assets/cat.png';\n\n\nfunction Cat(data) {\n\n    this.radius = 40\n    this.vel = data.vel || [0, 0];\n    this.color = \"red\"\n    this.game=data.game;\n    this.speed= 4.5;\n    this.image=catImage;\n\n  \n    \n    MovingObject.call(this, {\n        pos: data.pos,\n        vel: data.vel,\n        speed: this.speed,\n        radius: this.radius,\n        color: this.color,\n        game: data.game,\n        health: -1,\n        attack: 1,\n        multiplier: 1,\n        type: \"cat\",\n        image: this.image\n    });\n\n}\nvar timeout = null;\nvar timeout1 = null;\nvar timeout2 = null;\nvar timeout3 = null;\nvar timeout4 = null;\nvar timeout5 = null;\nvar timeout6 = null;\nvar timeout7 = null;\n\nCat.prototype.attackAction = function attackAction(vec) {\n    clearTimeout(timeout);\n    clearTimeout(timeout1);\n    clearTimeout(timeout2);\n    clearTimeout(timeout3);\n    clearTimeout(timeout4);\n    clearTimeout(timeout5);\n    clearTimeout(timeout6);\n    clearTimeout(timeout7);\n\n    this.speed=4.5\n\n    const newVec= Util.dir(vec)\n    // while(powerLevel>0){\n    //     setTimeout(()=>{\n    //         powerLevel-=.5\n    //         console.log(powerLevel)\n    //     }, 500)\n\n    this.vel[0] = newVec[0];\n    this.vel[1] = newVec[1];\n    // }\n    \n    timeout=setTimeout(()=>{this.reduceSpeed()},2000)\n    timeout1=setTimeout(() => { this.reduceSpeed() }, 2500)\n    timeout2=setTimeout(() => { this.reduceSpeed() }, 3500)\n    timeout3 =setTimeout(() => { this.reduceSpeed() }, 4500)\n    timeout4 =setTimeout(() => { this.reduceSpeed() }, 2900)\n    timeout5 =setTimeout(() => { this.reduceSpeed() }, 3400)\n    timeout6 =setTimeout(() => { this.reduceSpeed() }, 3800)\n    timeout7 = setTimeout(() => { this.reduceSpeed() }, 4200)\n}\n\nCat.prototype.reduceSpeed = function reduceSpeed() {\n    // debugger;\n    let that = this\n    if (that.speed>0){\n    that.speed -= .7;\n\n    }else if(that.speed<0){\n        this.vel=[0,0]\n    }\n\n}\n\nmodule.exports = Cat;","const Util = require(\"./util.js\");\nconst MovingObject = require(\"./moving_object.js\");\nUtil.inherits(EnemeyObject, MovingObject);\n\n\nfunction EnemeyObject(data){\n\n  \n    MovingObject.call(this, {\n        pos: data.pos,\n        speed:data.speed,\n        // vel: Util.randomVec(3)\n        vel: data.vel,\n        radius: data.radius,\n        game: data.game,\n        color: data.color,\n        health: data.health,\n        attack: data.attack,\n        range: data.range,\n        type: data.type,\n        image: data.image\n    });\n\n}\n\n\nmodule.exports = EnemeyObject;","// const EnemeyObject = require('./enemy_object');\nconst Util = require(\"./util.js\");\n\nconst Sloth= require(\"./sloth\")\nconst Cat = require(\"./cat\")\nconst TinyMouse =require('./tiny_mouse')\nconst HomingMouse = require('./homing_mouse')\n\nvar backgroundImage = new Image();\nbackgroundImage.src = './assets/bg2.png'; \n\n\nconst Game = function() {\n    this.DIM_X = 800;\n    this.DIM_Y= 500;\n    this.sloth = new Sloth({ pos: [250, 100], vel: [0, 0], health: 1000, game: this })\n    this.cat = new Cat({ pos: [300, 100], vel: [0, 0], game: this})\n    this.enemies=[];\n    this.tinyMouse=[];\n    this.homingMouse=[];\n    this.entities = [];\n    this.level = 1;\n    this.gameTinyMouseCount=0;\n    this.gameHomingMouseCount=0;\n    // debugger\n    this.addSloth();\n    this.addCat();\n    this.setStage();\n    \n    \n\n}\n\n\n\n\nGame.prototype.setStage = function () {\n   this.gameTinyMouseCount=50\n   this.gameHomingMouseCount=20\n    // debugger;\n\n   this.addEnemies(20,5);\n   \n}\n// checking to see if enemies needs to be repopulated\nGame.prototype.checkGameProgression = function () {\n \n    // console.log(this.gameTinyMouseCount)\n    // console.log(this.tinyMouse.length)\n\n    if (this.gameTinyMouseCount>0 || this.gameHomingMouseCount>0){\n        if (this.tinyMouse.length < 10 && this.gameTinyMouseCount > 9){\n            \n            this.gameTinyMouseCount-=10;\n            this.addEnemies(10,0)\n        }\n        if (this.homingMouse.length<3 && this.gameHomingMouseCount>4){\n            this.gameHomingMouseCount-=5;\n            this.addEnemies(0,5)\n        } \n\n    } \n    else if (this.gameTinyMouseCount < 3 && this.gameHomingMouseCount < 1 && this.tinyMouse.length<2 &&this.homingMouse.length===0){\n        alert(\"you won\")\n    }\n      \n    \n\n}\n// adding enemies into the array\nGame.prototype.addEnemies = function (tinyMouseCount, homingMouseCount){\n   \n    while(tinyMouseCount > 0){\n        let pos = this.startingPosition();\n        let that = this;\n        this.tinyMouse.push(new TinyMouse({ pos: pos, vel: Util.randomVec(3), game: that }));\n        tinyMouseCount--;\n    }\n    while (homingMouseCount > 0) {\n        let pos = this.startingPosition();\n        let that = this;\n        this.homingMouse.push(new HomingMouse({ pos: pos, vel: Util.randomVec(3), game: that }));\n        homingMouseCount--;\n    }\n\n    this.enemies=this.tinyMouse.concat(this.homingMouse)\n    this.entities = [this.sloth,this.cat].concat(this.enemies)\n\n    // //adding Sloth\n    // this.entities.push(new Sloth({pos:[250,100], vel:Util.randomVec(5),health:1000}))\n\n}\n\nGame.prototype.addSloth = function () {\n    //adding Sloth\n    this.entities.push(this.sloth)\n    // return this.sloth;\n}\nGame.prototype.addCat = function () {\n    //adding cat\n    this.entities.push(this.cat)\n    // return this.cat;\n}\n//each Step\n\nGame.prototype.step = function step(delta) {\n    this.moveObjects(delta);\n    this.checkCollisions();\n    this.checkInRange();\n    this.checkGameProgression();\n};\n\n\nGame.prototype.checkCollisions=function(){\n    const sloth = this.sloth;\n    const cat = this.cat;\n    for(let i = 0; i<this.enemies.length; i++){\n        // debugger\n        const object = this.enemies[i];\n        if (sloth.isCollidedWith(object)){\n            // const collision = sloth.collideWith(object)\n            // if(collision)return\n            sloth.takeDamage(object.attack)\n        }\n        if (cat.isCollidedWith(object)) {\n            // const collision = sloth.collideWith(object)\n            // if(collision)return\n            object.takeDamage(cat.attack*cat.speed)\n        }\n    }\n}\n\n\n//checking to see if object is in range:\nGame.prototype.checkInRange = function () {\n    const sloth = this.sloth;\n    // const homingMouse = this.homingMouse;\n    for (let i = 0; i < this.homingMouse.length; i++) {\n        \n        const hMouse = this.homingMouse[i];\n        if (hMouse.isInRangeOf(hMouse.range,sloth)) {\n            hMouse.retarget(sloth)\n        }\n    }\n}\n\n// Game.prototype.stopSloth() = function (){\n//     console.log(\"hi\")\n// }\n\n\n// intial rendering starting position\nGame.prototype.startingPosition = function (){\n    let x = this.DIM_X-30;\n    let y = Math.random()* this.DIM_Y;\n    return [x,y]\n}\n\n//Drawing enemies on the board\nGame.prototype.draw = function (ctx){\n    let totalEnemiesCount = this.enemies.length + this.gameTinyMouseCount + this.gameHomingMouseCount;\n\n\n    ctx.clearRect(0,0,this.DIM_X,this.DIM_Y)\n    ctx.drawImage(backgroundImage, 0, 0);\n    // ctx.fillRect(0, 0, this.DIM_X, this.DIM_Y);\n    ctx.fillStyle= \"red\";\n    ctx.font = \"25px Arial\";\n    ctx.fillText(`Health ${this.sloth.health} /5000`, 50, 480);\n    ctx.fillText(`${totalEnemiesCount} Enemies Left`, 550, 480);\n\n    //populating entities\n    for( let i=0; i<this.entities.length; i++){\n        this.entities[i].draw(ctx)\n    }\n}\n\n//Moving Entities\nGame.prototype.moveObjects = function (delta){\n\n    for (let i = 0; i < this.entities.length; i++) {\n        this.entities[i].move(delta)\n    }\n}\n\n// Remove Object\nGame.prototype.remove = function remove(object) {\n\n    switch (object.type) {\n        case \"homingMouse\":\n            this.homingMouse.splice(this.homingMouse.indexOf(object), 1);\n            this.enemies = this.tinyMouse.concat(this.homingMouse)\n            this.entities = [this.sloth, this.cat].concat(this.enemies)\n            \n            break;\n        case \"tinyMouse\":\n            this.tinyMouse.splice(this.tinyMouse.indexOf(object), 1);\n            this.enemies = this.homingMouse.concat(this.tinyMouse)\n            this.entities = [this.sloth, this.cat].concat(this.enemies)\n            break;\n\n        default:\n            break;\n    }\n    \n};\n\nmodule.exports = Game;\n\n","const Game = require('./game.js');\nlet cat='';\nlet mouseTimeout;\nlet mouseTimeout1;\nlet mouseTimeout2;\nlet mouseTimeout3;\nlet mouseTimeout4;\nlet vec=[];\n\n\n\nconst GameView = function ( ctx,canvas) {\n    this.game = new Game();\n    this.canvas=canvas;\n    this.ctx = ctx;\n    this.sloth = this.game.sloth;\n    this.enemies = this.game.enemies;\n    this.cat= this.game.cat;\n    cat = this.cat;\n    canvas=this.canvas;\n    this.entities = this.game.entities;\n    this.start();\n}\n\nfunction getPosition(event) {\n    \n\n    let x = event.x;\n    let y = event.y;\n\n    x -= cat.pos[0];\n    y -= cat.pos[1];\n    vec = [x, y]\n    cat.vel = [0, 0]\n    releaseAttack()\n}\n\nconst releaseAttack = () => {\n\n    clearTimeout(mouseTimeout);\n    clearTimeout(mouseTimeout1);\n    clearTimeout(mouseTimeout2);\n    clearTimeout(mouseTimeout3);\n    clearTimeout(mouseTimeout4);\n\n    \n   \n    cat.attackAction(vec);\n\n \n}\n\nGameView.MOVES = {\n    w: [0, -2],\n    a: [-2, 0],\n    s: [0, 2],\n    d: [2, 0],\n\n};\n\nGameView.prototype.bindKeyHandlers = function bindKeyHandlers() {\n    const sloth = this.sloth;\n\n    Object.keys(GameView.MOVES).forEach(function (k) {\n        const move = GameView.MOVES[k];\n        key(k, function () { sloth.power(move); });\n    });\n\n    \n};\n\n\n\n\nGameView.prototype.clickHandlers = function dlidkHandlers() {\n   \n    const canvas = this.canvas\n\n    const accelerator = () => {\n        cat.multiplier = 1\n        mouseTimeout = setTimeout(() => {\n\n            cat.multiplier += .2\n        }, 300)\n        mouseTimeout1 = setTimeout(() => {\n\n            cat.multiplier += .2\n\n        }, 550)\n        mouseTimeout2 = setTimeout(() => {\n\n            cat.multiplier += .3\n\n        }, 800)\n        mouseTimeout3 = setTimeout(() => {\n\n            cat.multiplier += .5\n\n        }, 1100)\n        mouseTimeout4 = setTimeout(() => {\n\n            cat.multiplier += .5\n\n        }, 1400)\n\n   \n    }\n    \n\n    canvas.addEventListener(\"mousedown\", accelerator, false);\n    canvas.addEventListener(\"mouseup\", getPosition , false);\n    \n\n\n};\n\nGameView.prototype.start = function start() {\n\n\n    this.bindKeyHandlers();\n    this.clickHandlers();\n    this.lastTime = performance.now();\n    // this.lastTime=0;\n    // start the animation\n    // debugger;\n    requestAnimationFrame(this.animate.bind(this));\n    \n};\n\nGameView.prototype.animate = function animate(time) {\n\n   \n    const timeDelta = time - this.lastTime;\n\n    // debugger\n   \n    this.game.step(timeDelta);\n    this.game.draw(this.ctx);\n    this.lastTime = time;\n\n    // every call to animate requests causes another call to animate\n    requestAnimationFrame(this.animate.bind(this));\n};\n\nmodule.exports = GameView;","const Util = require(\"./util.js\");\nconst EnemeyObject = require(\"./enemy_object\");\nUtil.inherits(HomingMouse, EnemeyObject);\nvar hMImage = new Image();\nhMImage.src = './assets/mouse.png';\n\n\nfunction HomingMouse(data) {\n\n\n\n    EnemeyObject.call(this, {\n        pos: data.pos,\n        vel: data.vel,\n        speed: .5,\n        radius: 30,\n        game: data.game,\n        health: 25,\n        attack: 15,\n        range: 280,\n        type: \"homingMouse\",\n        color: \"pink\",\n        image: hMImage\n    })\n\n}\n\nHomingMouse.prototype.retarget = function retarget(otherObject) {\n  \n    let x = otherObject.pos[0];\n    let y = otherObject.pos[1];\n\n    x -= this.pos[0];\n    y -= this.pos[1];\n    oldVec = [x, y]\n    // debugger\n    this.speed = 1.8\n\n    const vec = Util.dir(oldVec)\n//  debugger\n    this.vel[0] = vec[0];\n    this.vel[1] = vec[1];\n};\n\nmodule.exports = HomingMouse;","console.log(\"Webpack is working!\")\n\nconst Game = require('./game.js');\nconst GameView = require('./game_view.js');\nconst Modal = require(\"./modal\")\n\n\nconst MovingObject = require(\"./moving_object.js\");\n\n\n// testing\nwindow.MovingObject = MovingObject;\n\n\nwindow.addEventListener('DOMContentLoaded', () => {\n    Modal();\n    const canvas = document.getElementById('game-canvas');\n    const ctx = canvas.getContext('2d');\n\n\n\n    document.getElementById(\"start\")\n    start.addEventListener('click', () => {\n        \n       \n        start.disabled = 'true'\n        restart.disabled=false;\n        // const canvas = document.getElementById('game-canvas');\n        // const ctx = canvas.getContext('2d');\n        const view = new GameView(ctx, canvas) \n    \n    })\n\n    restart.disabled = true;\n    restart.addEventListener('click', () => {\n        \n        const view = new GameView(ctx, canvas) \n      \n    })\n\n})\n\n","function Modal() {\n    let modal = document.querySelector(\".modal\");\n    let trigger = document.querySelector(\".trigger\");\n    let closeButton = document.querySelector(\".close-button\");\n    modal.classList.toggle(\"show-modal\");\n\n\n    \n    function toggleModal() {\n        modal.classList.toggle(\"show-modal\");\n    }\n\n    function windowOnClick(event) {\n        if (event.target === modal) {\n            toggleModal();\n        }\n    }\n    trigger.addEventListener(\"click\", toggleModal);\n    closeButton.addEventListener(\"click\", toggleModal);\n    window.addEventListener(\"click\", windowOnClick)\n}\n\nmodule.exports = Modal;","const Util = require(\"./util\");\nlet tmFrameCount = 0;\nlet hmFrameCount =0 ;\nlet catFrameCount = 0;\nlet slothFrameCount = 0;\nlet currentLoopIndex = 0;\nconst cycleLoop = [0, 1, 0, 2];\n\n\nfunction MovingObject(options) {\n    this.pos = options.pos;\n    this.vel = options.vel;\n    this.radius = options.radius;\n    this.game =options.game;\n    this.color=options.color;\n    this.multiplier=options.multiplier||1;\n    this.speed=options.speed;\n    this.health = options.health;\n    this.attack= options.attack;\n    this.type= options.type\n    this.range=options.range\n    this.image=options.image\n};\n\nMovingObject.prototype.collideWith = function collideWith(otherObject) {\n    // default do nothing\n};\n\n\nMovingObject.prototype.drawFrameMouse=function drawFrameMouse(frameX, frameY,ctx) {\n    ctx.drawImage(this.image,\n                 frameX * 32, frameY * 32,32, 32,\n            this.pos[0] - this.radius, this.pos[1] - this.radius,\n             this.radius*1.5, this.radius * 1.5)\n}\n\nMovingObject.prototype.draw = function draw(ctx) {\n    ctx.fillStyle = this.color;\n    // debugger\n    if (this.type===\"cat\"){\n\n        //static cat\n\n        if (this.vel[0]===0 && this.vel[1]===0){\n            this.drawFrameMouse(1, 0, ctx);\n            return;\n        }\n\n        let direction = 0\n        if (this.vel[0] < 0) {\n            direction = 1\n        } else if (this.vel[0] > 0) {\n            direction = 2\n        }\n        // } else if (this.vel[1] < 0) {\n        //     direction = 2\n        // } else {\n        //     direction = 0\n        // }\n\n        catFrameCount++;\n        if (catFrameCount < (1000-(90*this.speed*this.multiplier))) {\n            this.drawFrameMouse(cycleLoop[currentLoopIndex], direction, ctx);\n            return;\n        }\n        catFrameCount = 0;\n        // ctx.clearRect(0, 0, canvas.width, canvas.height);\n        this.drawFrameMouse(cycleLoop[currentLoopIndex], direction, ctx);\n        currentLoopIndex++;\n        if (currentLoopIndex >= cycleLoop.length) {\n            currentLoopIndex = 0;\n        }\n\n    } else if(this.type===\"sloth\") {\n        if (this.vel[0] === 0 && this.vel[1] === 0) {\n            this.drawFrameMouse(1, 0, ctx);\n            return;\n        }\n        // debugger\n        console.log(this.vel)\n        let direction = 2\n        if (this.vel[0] < 0) {\n            direction = 1\n        } else if (this.vel[0] > 0) {\n            direction = 2\n        } else if (this.vel[1] < 0) {\n            direction = 3\n        } else {\n            direction = 0\n        }\n\n        slothFrameCount++;\n        if (slothFrameCount < (1000 - (90 * this.speed * this.multiplier))) {\n            this.drawFrameMouse(cycleLoop[currentLoopIndex], direction, ctx);\n            return;\n        }\n        slothFrameCount = 0;\n        // ctx.clearRect(0, 0, canvas.width, canvas.height);\n        this.drawFrameMouse(cycleLoop[currentLoopIndex], direction, ctx);\n        currentLoopIndex++;\n        if (currentLoopIndex >= cycleLoop.length) {\n            currentLoopIndex = 0;\n        }\n\n\n    } else if (this.type === \"tinyMouse\") {\n\n        // debugger\n        let direction = 2\n        if (this.vel[0] < 0) {\n            direction = 3\n        } else if (this.vel[0] > 0) {\n            direction = 1\n        } else if (this.vel[1] < 0) {\n            direction = 2\n        } else {\n            direction = 0\n        }\n        \n            tmFrameCount++;\n            if (tmFrameCount < 60) {\n            this.drawFrameMouse(cycleLoop[currentLoopIndex], direction, ctx);\n                return;\n            }\n             tmFrameCount = 0;\n            // ctx.clearRect(0, 0, canvas.width, canvas.height);\n            this.drawFrameMouse(cycleLoop[currentLoopIndex], direction,ctx);\n            currentLoopIndex++;\n            if (currentLoopIndex >= cycleLoop.length) {\n                currentLoopIndex = 0;\n            }\n        \n\n\n\n\n    } else if (this.type === \"homingMouse\") {\n        // if (this.vel[0] < 0) {\n        //     ctx.drawImage(this.image, 0, 100, 32, 32,\n        //         this.pos[0] - this.radius, this.pos[1] - this.radius, this.radius * 1.5, this.radius * 1.5)\n        // } else {\n        //     ctx.drawImage(this.image, 0, 32, 32, 32,\n        //         this.pos[0] - this.radius, this.pos[1] - this.radius, this.radius * 1.5, this.radius * 1.5)\n        // }\n        let direction = 2\n        if (this.vel[0] < 0) {\n            direction = 3\n        } else if( this.vel[0]>0){\n            direction =1\n        } else if( this.vel[1]<0){\n            direction = 2\n        } else{\n            direction = 0\n        }\n\n        hmFrameCount++;\n        if (hmFrameCount < 40) {\n            this.drawFrameMouse(cycleLoop[currentLoopIndex], direction, ctx);\n            return;\n        }\n        hmFrameCount = 0;\n        // ctx.clearRect(0, 0, canvas.width, canvas.height);\n        this.drawFrameMouse(cycleLoop[currentLoopIndex], direction, ctx);\n        currentLoopIndex++;\n        if (currentLoopIndex >= cycleLoop.length) {\n            currentLoopIndex = 0;\n        }\n\n    } else{\n    ctx.beginPath();\n    ctx.arc(\n        this.pos[0], this.pos[1], this.radius, 0, 2 * Math.PI, true\n    );\n    ctx.fill();}\n};\nconst NORMAL_FRAME_TIME_DELTA = 1000 / 60;\n\nMovingObject.prototype.move = function move(timeDelta) {\nconst velocityScale = timeDelta / NORMAL_FRAME_TIME_DELTA,\n        offsetX = this.vel[0] * velocityScale * this.speed*this.multiplier,\n        offsetY = this.vel[1] * velocityScale * this.speed*this.multiplier;\n\n    let x = this.pos[0] + offsetX;\n    let y = this.pos[1] + offsetY;\n    if (x > 800 || x < 0) {\n        this.vel[0] = -(this.vel[0])\n    }\n\n    if (y > 500 || y < 0){\n        this.vel[1] = -(this.vel[1] )\n    }\n    this.pos[0] = x;\n    this.pos[1] = y;\n\n\n};\n\nMovingObject.prototype.isCollidedWith = function isCollidedWith(otherObject) {\n    const centerDist = Util.dist(this.pos, otherObject.pos);\n    return centerDist < (this.radius + otherObject.radius);\n};\n\nMovingObject.prototype.isInRangeOf = function isInRangeOf(range,otherObject) {\n    // debugger\n    const centerDist = Util.dist(this.pos, otherObject.pos) ;\n    return centerDist < (this.radius + otherObject.radius + range);\n};\n\nMovingObject.prototype.remove = function remove() {\n    // debugger\n    this.game.remove(this);\n};\n\nMovingObject.prototype.takeDamage = function takeDamage(attack) {\n    this.health-= attack\n    if( this.health < 0){\n        if (this.type === \"sloth\"){\n            alert(\"gameOver\")\n        } else if(this.type === \"tinyMouse\") {\n        this.game.remove(this)\n        }\n    } else if (this.type === \"homingMouse\") {\n        this.game.remove(this)\n    }\n    \n};\n\n\nmodule.exports = MovingObject;\n","const Util = require(\"./util.js\");\nconst MovingObject = require(\"./moving_object.js\");\nUtil.inherits(Sloth, MovingObject);\n\n\nvar slothImage = new Image();\nslothImage.src = './assets/cheddar.png';\n\n\n\nfunction Sloth(data) {\n    \n    data.radius = 35;\n    data.vel = data.vel || [0,0];\n    data.game= data.game;\n    data.speed=1.9\n    data.color=\"green\";\n    data.health = 5000;\n    data.attack= 0;\n    data.type= \"sloth\";\n    data.image = slothImage;\n    MovingObject.call(this,data);\n    \n\n}\nvar timeout = null\n\nSloth.prototype.power = function power(impulse) {\n    \n    this.vel[0] = impulse[0];\n    this.vel[1] = impulse[1];\n    let that = this;\n    clearTimeout(timeout)\n    // timeout = setTimeout(() => { console.log(\"hi\")}, 500)\n\n    timeout= setTimeout(()=>{that.vel[0]=0;that.vel[1]=0},500)\n  \n};\n\nSloth.prototype.power\n\n\nmodule.exports = Sloth;","const Util = require(\"./util.js\");\nconst EnemeyObject = require(\"./enemy_object\");\nUtil.inherits(TinyMouse, EnemeyObject);\n\nvar tMImage = new Image();\ntMImage.src = './assets/rat.png';\n\nfunction TinyMouse(data){\n\n    \n\n    EnemeyObject.call(this,{\n        pos: data.pos,\n        vel: data.vel,\n        speed: .5,\n        radius: 25,\n        game: data.game,\n        health: 20,\n        attack: 10,\n        type: \"tinyMouse\",\n        color: \"none\",\n        image: tMImage\n\n    })\n\n\n\n\n\n\n}\n\nmodule.exports = TinyMouse;","const Util = {\n    inherits(childClass, parentClass) {\n        childClass.prototype = Object.create(parentClass.prototype);\n        childClass.prototype.constructor = childClass;\n    },\n    randomVec(length) {\n        const deg = -1 * Math.PI * Math.random();\n        return Util.scale([Math.sin(deg), Math.cos(deg)], length);\n    },\n    // Scale the length of a vector by the given amount.\n    scale(vec, m) {\n        return [vec[0] * m, vec[1] * m];\n    },\n\n     // Find distance between two points.\n    dist(pos1, pos2) {\n        return Math.sqrt(\n            Math.pow(pos1[0] - pos2[0], 2) + Math.pow(pos1[1] - pos2[1], 2)\n        );\n    },\n    // Normalize the length of the vector to 1, maintaining direction.\n    dir(vec) {\n        const norm = Util.norm(vec);\n        return Util.scale(vec, 1 / norm);\n    },\n\n    // Find the length of the vector.\n    norm(vec) {\n        return Util.dist([0, 0], vec);\n    },\n};\n\n\n\nmodule.exports = Util;"],"sourceRoot":""}